/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modulo.reportes;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Beto_
 */
public class ReporteClientesGUI extends javax.swing.JFrame {
//    ICliente clienteBO = ManejadorBO.crearClienteBO;
//    List<ClienteViejoDTO> listaClientes;
    
    //VARIABLES DEL REPORTE
        // tipos de letra, diferente para el titulo, cabecera para que se vea más bonito
    private static final Font FUENTE_TITULO = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18);
    private static final Font FUENTE_CABECERA = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12);
    private static final Font FUENTE_NORMAL = FontFactory.getFont(FontFactory.HELVETICA, 10);
    
    /**
     * Creates new form ReporteClientesGUI
     */
    public ReporteClientesGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegresar = new javax.swing.JButton();
        btnVistaPrevia = new javax.swing.JButton();
        btnGenerarPDF1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblComandas = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombre1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegresar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnVistaPrevia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnVistaPrevia.setText("Vista Previa");
        btnVistaPrevia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVistaPreviaActionPerformed(evt);
            }
        });

        btnGenerarPDF1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGenerarPDF1.setText("Generar PDF");
        btnGenerarPDF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPDF1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Broadway", 0, 18)); // NOI18N
        jLabel1.setText("Reporte de clientes");

        tblComandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "No. Visitas", "Total gastado", "Puntos de fidelidad", "Fecha ult. comanda"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblComandas);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Número de visitas:");

        txtNombre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombre1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(189, 189, 189))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnRegresar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(btnGenerarPDF1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108)
                        .addComponent(btnVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(123, 123, 123)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtNombre1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(btnVistaPrevia)
                    .addComponent(btnGenerarPDF1))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnVistaPreviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVistaPreviaActionPerformed
        // TODO add your handling code here:
        

    }//GEN-LAST:event_btnVistaPreviaActionPerformed

    private void btnGenerarPDF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPDF1ActionPerformed
        // TODO add your handling code here:
        if(tblComandas.getRowCount() <= 0){
            JOptionPane.showMessageDialog(this, "No se puede generar el reporte sin vista previa", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
//        if(listaClientes == null){
//            JOptionPane.showMessageDialog(this, "No se puede generar el reporte sin comandas", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        crearReporteComandas(listaClientes, "Reporte_clientes_frecuentes.pdf");
//
//        JOptionPane.showMessageDialog(this, "Reporte generado (No es cierto) ", "Operación exitosa", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnGenerarPDF1ActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombre1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteClientesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteClientesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteClientesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteClientesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReporteClientesGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerarPDF1;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnVistaPrevia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblComandas;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombre1;
    // End of variables declaration//GEN-END:variables

    private void cargarClientes(){
        
    }
//    private void crearReporteComandas(List<ClienteViejoDTO> clientes, String nombreArchivo){
//        try{
//            Document document = new Document();
//            PdfWriter.getInstance(document, new FileOutputStream(nombreArchivo));
//            document.open();
//
//            //Agregar el título
//            Paragraph titulo = new Paragraph("Reporte de Comandas", FUENTE_TITULO);
//            titulo.setAlignment(Element.ALIGN_CENTER);
//            document.add(titulo);
//            document.add(new Paragraph(" "));
//            
//            String descripcion = "Reporte de todos los clientes";
//            //Agregar texto descriptivo si esta seleccionado el filtro de fechas
//            if(txtNombre != null && txtVisitas != null){
//                descripcion = "Reporte de clientes con nombre: " + txtNombre.getText() +
//                               "y con un número de visitas mayor a: " + txtVisitas;
//            }
//            
//            if(txtNombre.getText() != null || txtNombre.getText().length() > 0){
//                descripcion = "Reporte de clientes con nombre: " + txtNombre.getText();
//            }
//            
//            if(txtVisitas != null){
//                descripcion = "Reporte de clientes con un número de visitas mayor a: " + txtVisitas;
//            }
//            
//            Paragraph descripcionP = new Paragraph(descripcion, FUENTE_NORMAL);
//            descripcionP.setAlignment(Element.ALIGN_CENTER);
//            document.add(descripcionP);
//            document.add(new Paragraph(" "));
//
//            //Crear la tabla
//            PdfPTable tabla = new PdfPTable(5);
//            tabla.setWidthPercentage(100);
//
//            //Agregar las cabeceras de la tabla
//            agregarCabecerasCliente(tabla);
//
//            //Aagregar los datos de las comandas a la tabla
//            for (ClienteViejoDTO cliente : clientes) {
//                agregarFilaComanda(tabla, comanda);
//            }
//
//            //Agregar la tabla al documento
//            document.add(tabla);
//
//            document.close(); //Cerramos para que no se le metan bichitos
//        }catch(DocumentException | FileNotFoundException e){
//            JOptionPane.showMessageDialog(this, "Error al crear el PDF del reporte", "Error", JOptionPane.ERROR);
//        }
//    }
//    
//    //Se podría hacer un método, pero así mejor para mayor legibilidad
//    private void agregarCabecerasCliente(PdfPTable tabla) {
//        agregarCeldaCabecera(tabla, "Nombre");
//        agregarCeldaCabecera(tabla, "Numero de visitas");
//        agregarCeldaCabecera(tabla, "Total gastado");
//        agregarCeldaCabecera(tabla, "Puntos de fidelidad");
//        agregarCeldaCabecera(tabla, "Fecha última comanda");
//    }
//    
//    private void agregarCeldaCabecera(PdfPTable tabla, String texto) {
//        PdfPCell cell = new PdfPCell(new Phrase(texto, FUENTE_CABECERA));
//        tabla.addCell(cell);
//    }
//    
//    //Lo mismo, pero para la info
//    private void agregarFilaCliente(PdfPTable tabla, ClienteViejoDTO cliene) {
//        String numMesa = obtenerMesa(comanda.getIdMesa()).getNumeroMesa().toString();
//        agregarCeldaNormal(tabla, comanda.getFechaHora() != null ? comanda.getFechaHora().format(FORMATO_FECHA) : "");
//        agregarCeldaNormal(tabla, comanda.getFechaHora() != null ? comanda.getFechaHora().format(FORMATO_HORA) : "");
//        agregarCeldaNormal(tabla, comanda.getIdMesa() != null ? numMesa : "");
//        agregarCeldaNormal(tabla, comanda.getTotalVenta() != null ? String.format("%.2f", comanda.getTotalVenta()) : ""); // Formatear a 2 decimales
//        agregarCeldaNormal(tabla, comanda.getEstado() != null ? comanda.getEstado().toString() : "");
//        agregarCeldaNormal(tabla, comanda.getIdCliente() != null ? comanda.getIdCliente().toString() : "");
//    }
//    
//    private void agregarCeldaNormal(PdfPTable tabla, String texto) {
//        PdfPCell cell = new PdfPCell(new Phrase(texto, FUENTE_NORMAL));
//        tabla.addCell(cell);
//    }
}
